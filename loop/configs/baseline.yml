training:
    exp_name: 'baseline'
    log_level: INFO

    total_epochs: 25

    work_dir: '/data/sleep3r/runs'
    images_path: &images_path "/data/sleep3r/chest_dataset/images"
    masks_path: &masks_path "/data/sleep3r/chest_dataset/masks"
    duplicates_path: &duplicates_path "/data/sleep3r/chest_dataset/groups.json"

    classes: &classes [ "pneumonia" ]
    projections: &projections [ "pa" ]

    seed: 228
    precision: 10
    deterministic: false
    fold_seed_step: 5

    dist_params:
        backend: nccl
        init_method: env://
    reduce_bn: true

    load_from:

    cudnn_benchmark: false # auto false if deterministic is true
    channels_last: false
    find_unused_parameters: true

    clip_grad: 1.0
    clip_mode: norm


image_params: &image_params
    width: 704
    height: 800

    img_norm_cfg:
        mean: [ 0.485, 0.456, 0.406 ]
        std: [ 0.229, 0.224, 0.225 ]


loss:
    type: segmentation_models_pytorch.utils.losses.BCELoss


model:
    type: segmentation_models_pytorch.DeepLabV3Plus
    params:
        encoder_name: efficientnet-b4
        encoder_weights: imagenet
        classes: 1
        activation: sigmoid

        # classification head
        aux_params:
            pooling: max
            dropout: 0.1
            activation: softmax
            classes: 2


evaluation:
    metrics: [ "iou" ]
    best_metric: "iou"


cross_validation:
    n_splits: 5

    duplicates_path: *duplicates_path


loader:
    batch_size: &batch_size 3

    pin_memory: true
    num_workers: 0 # often is better to set 0 while distributed training
    drop_last: true
    shuffle: false

    collate_fn:
        type: dataset.Collect
        params:
            meta_keys: [ ]


train_dataset:
    kind: "train"
    batch_size: *batch_size

    steps_per_epoch:

    images_path: *images_path
    masks_path: *masks_path

    classes: *classes
    projections: *projections

    image_params: *image_params

    aggregate_masks: false
    read_norma: true

    transform:
        type: transform.ChestTransform
        params:
            kind: "train"
            image_params: *image_params
            augs_lvl: "hard"


val_dataset:
    kind: "val"

    image_params: *image_params

    images_path: *images_path
    masks_path: *masks_path

    classes: *classes
    projections: *projections

    aggregate_masks: false
    read_norma: true

    transform:
        type: transform.ChestTransform
        params:
            kind: "val"
            image_params: *image_params


optimizer:
    type: torch.optim.Adam
    params:
        lr: 0.0003
        weight_decay: 0.00001


lr_scheduler:
